
################################################################################


      Pitch Recognizer is a simple command-line application recognizing
      pitch of a played tone in a given audio stream (microphone/file).
      It was based on some parts of MusA and may become its part in future.

      Copyright (C) 2018  Lukáš Ondráček <ondracek.lukas@gmail.com>

      This program is free software: you can redistribute it and/or modify
      it under the terms of the GNU General Public License version 3
      as published by the Free Software Foundation.

      This program is distributed in the hope that it will be useful,
      but WITHOUT ANY WARRANTY; without even the implied warranty of
      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
      GNU General Public License for more details.

      You should have received a copy of the GNU General Public License
      along with this program.  If not, see <http://www.gnu.org/licenses/>.


################################################################################


Overview
--------

The application opens an input device or an audio file
and recognizes pitch of played tones (one at a time).
An output line contains the nearest tone name, the difference from it in cents,
the measured frequency, and a quality of the periodic signal
(a measure of how much is the signal periodic with the given frequency).

It processes a block of sound at a time
taking its subblock at the end and comparing it
with the same-length subblock inside the block,
to measure the period (shift of the subblocks).

By default an input device is opened with a higher sampling rate than usual,
choose a lower rate if an error occurs.

The application uses Helmholtz pitch notation (..., C1, C, c, c1, c2, ...),
instead of scientific pitch notation (..., C1, C2, C3, C4, C5, ...);
concert pitch is thus denoted by a1.
In addition, German key notation is used
replacing sharp by -is suffix and flat by -es suffix
(c, cis/des, d, dis/es, e, f, fis/ges, g, gis/hes, h);
for clarity, B tone name is not used at all.


Dependencies and compilation
----------------------------

Run-time dependencies: ffmpeg, PortAudio
(pulseaudio-alsa plug-in may be needed on Linux with PulseAudio).

Additional compile-time dependencies: Perl5, GNU make.

To compile the application on Linux just use 'make' command
after satisfying the dependencies.
To cross-compile it on Linux for Windows use 'make arch=win32' (not tested).


Command-line arguments
----------------------

musa -h | -?  ...prints help
musa -r       ...prints this README
musa -c       ...prints COPYING
musa [OPTIONS] [ FILENAME | -d[FREQUENCY] ]
  ...runs the application opening given file
     or input device (with specified frequency or not).
OPTIONS are
  --OPTION       ...activates boolean OPTION
  --noOPTION     ...deactivates boolean OPTION
  --OPTION=VALUE ...sets non-boolean OPTION to VALUE
You can find the list of options below.


Options
-------

a1freq / a1  (real number, Hz)
  ...frequency of a1, usually 440 Hz
rate / rt  (real number, Hz)
  ...number of tone recognitions per second
blockms (real number, ms)
	...length of a sound to be used for processing (block)
subblockms (real number, ms)
	...length of a sound containing at least one period (subblock)
minquality (real number, %)
	...minimal quality to be considered as a tone

onepertone (boolean)
	...print only one result per continuous tone
maxgapquality (real number, %)
	...maximal quality to be considered as a gap between tones
mingap (real number, ms)
	...minimal length of a gap between tones

See also
--------

VERSION for current version of the application,
COPYING for full text of GNU General Public Licence version 3.

Other information and recent versions can be found on
  http://github.com/ondracek-lukas/pitch-recognizer
and/or on my web page
  http://ondracek-lukas.hys.cz/ .
